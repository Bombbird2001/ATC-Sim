apply plugin: "java"

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.bombbird.terminalcontrol.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../android/assetsFull")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

//Called before build to check that version information in internal game files are correct for each version
task checkVersionFull() {
    doLast {
        String gradleVersion = project.version
        String gradleVersionCode = project.versionCode

        def text = project.file("../android/assetsFull/game/type.type").text
        def values = text.split(' ')
        if (values.size() < 2) {
            throw new GradleException("Full version: Type string length is " + values.size() + ", needs 2")
        }
        if ((values[0] != gradleVersion) || (values[1] != gradleVersionCode)) {
            throw new GradleException("Full version: " + values[0] + " code " + values[1] + " not equal to Gradle's " + gradleVersion + " code " + gradleVersionCode)
        }
        println "Full version check successful"
    }
}

task buildFull(type: Jar) {
    project.ext.assetsDir = new File("../android/assetsFull")
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compileClasspath.collect {zipTree(it)}}
    from files(project.assetsDir)

    manifest {
        attributes 'Main-Class': project.mainClassName
    }

    doLast {
        println("Full version JAR successfully built")
    }
}

buildFull.dependsOn classes, checkVersionFull
